@model DAP.Models.Rating

@{
    ViewBag.Title = "Rating";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .edit-mode { }
    .edit-user{}
    .edit-user display-mode{}
    .save-user edit-mode{}
    .display-mode{}
    .cancel-user{}
    .webgrid-table
    {
        font-family: Arial,Helvetica,sans-serif;
        font-size: 14px;
        font-weight: normal;
        width: 570px;
        display: table;
        border-collapse: collapse;
        border: solid px #C5C5C5;
        background-color: white;        
    }
    .webgrid-table td, th
    {
        border: 1px solid #C5C5C5;
        padding: 3px 7px 2px;
    }
    .webgrid-header, .webgrid-header a
    {
        background-color: #E3E3E3;
        color: black;
        text-align: left;
        text-decoration:none;
    }
    .webgrid-footer
    {
    }
    .webgrid-row-style
    {
        padding: 3px 7px 2px;
         
    }
    .webgrid-alternating-row
    {
        background-color: #F5F5F5;
        padding: 3px 7px 2px;
    }
    .col1Width
    {
        width: 50px;
    }
    .col2Width
    {
        width: 200px;
    }
</style>
<script type="text/javascript" >
    $(function () {
        $('.edit-mode').hide();
        $('.edit-user, .cancel-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });

//        $("#post_button").on('click', function () {
//            //            $("#comp_name").val($(this).find("option:selected").text());

//            var a = document.getElementById("ddl_compname");
//            //        var strUser = e.options[e.selectedIndex].value;
//            var va = a.options[a.selectedIndex].text;

//            var b = document.getElementById("ddl_fundshortname");
//            //        var strUser = e.options[e.selectedIndex].value;
//            var vb = b.options[b.selectedIndex].text;

//            $("#comp_name").val(va);
//            $("#fund_name_short").val(vb);



//        });
      
            
        $('.save-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            var rating_name = tr.find("#txt_ratingName").val();
            var rating_shortname = tr.find("#txt_rating_shortname").val();
            var rating_status = tr.find("#txt_rating_status").val();
            var rating_isdefault = tr.find("#txt_rating_isdefault").val();
            var rating_id = tr.find("#ratingid").html();


            ///////////////////////

            if (rating_name == "") {
                alert("Name Required");
                return false;
            }
            if (rating_shortname == "") {
                alert("SHORT Name Required");
                return false;
            }
            if (rating_status == "") {
                alert("Status  Required");
                return false;
            }

            if (rating_status != "ACTIVE" && rating_status != "INACTIVE") 
            {
                alert("Kindly provide Status in correct format");
                return false;
            }

            if (rating_isdefault == "") 
            {
                alert("IS DEFAULT   Required");
                return false;
            }

            if (rating_isdefault != "TRUE" && rating_isdefault != "FALSE") 
            {
                alert("Kindly provide Default Value in correct format");
                return false;
            }



          
          
            /////////////////////////////           
            tr.find("#lblratingname").text(txt_ratingName);
            tr.find("#lblratingshortname").text(txt_rating_shortname);
            tr.find("#lblrating_status").text(txt_rating_status);
            tr.find("#lblrating_default").text(txt_rating_isdefault);
            tr.find('.edit-mode, .display-mode').toggle();
            var Rating =
            {
                "rating_id": rating_id,
                "rating_name": rating_name,
                "rating_shortname": rating_shortname,
                "rating_status": rating_status,
                "rating_isdefault": rating_isdefault
            };
            $.ajax({
                url: '/DAP/Home/edit_rating/',
                data: JSON.stringify(Rating),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    alert(data);
                    window.location.href = '/DAP/Home/Rating/';   // used to redirect or load page 

                }
            });

        });
    })
</script>


<h2>Rating Setup</h2>

<div align="center"> 
@using (Html.BeginForm("Rating", "Home", FormMethod.Post))
    {
       <table>
            <tr>
                <th>  
    
      <table cellpadding="3" cellspacing="3">
            <tr>
                <th colspan="2" style="background-color:gray;" align="left">Entry Form</th>
            </tr>
            <tr>
                <td align="left">Name: </td>
                <td>
                    @Html.TextBoxFor(m =>m.rating_name)
                </td>
             <td style="color: #FF0000">*            
             @Html.ValidationMessageFor(m=>m.rating_name)
            </td>
            </tr>
            
            <tr>
                <td align="left">Short Name: </td>
                <td>
                    @Html.TextBoxFor(m =>m.rating_shortname)
                </td>
            <td style="color: #FF0000">*            
             @Html.ValidationMessageFor(m=>m.rating_shortname)
            </td>
            
            </tr>
       <tr>
                <td align="left">Status: </td>
                 <td align="left">
                    @Html.DropDownListFor(m => m.rating_status, new List<SelectListItem>
                   { new SelectListItem{Text="ACTIVE", Value="ACTIVE"},
                     new SelectListItem{Text="INACTIVE", Value="INACTIVE"}}
                     //new SelectListItem{Text="A+", Value="A+"},
                     //new SelectListItem{Text="AA", Value="AA"},
                     //new SelectListItem{Text="A", Value="A"},
                     //new SelectListItem{Text="   ", Value="NULL"}},
                     //new SelectListItem{Text="Canada", Value="Canada"}},
                    )
                </td>
            <td style="color: #FF0000">            
             @Html.ValidationMessageFor(m=>m.rating_status)
            </td>
            
            </tr>     
       
       
       
       
       
            @*<tr>
                <td>Rating Status: </td>
                <td>
                    @Html.TextBoxFor(m =>m.rating_status)
                </td>
            </tr>*@
            <tr>
                <td align="left">Is Default: </td>
              <td align="left">
                  
                  @Html.CheckBoxFor(m =>m.rating_isdefault_bool, true)
                  
                  @*  @Html.TextBoxFor(m =>m.rating_isdefault)*@
                </td>
            </tr>

            <tr>
                <td></td>
                 <td colspan="2" align="left"><input type="submit" value="Add" />
                 <input type="button" value="Clear" onclick="location.href='@Url.Action("Rating", "Home")'" />
                 </td>
                 

            </tr>
        </table>
    
    </th>
      </tr>
        </table>


    
    }

</div>

@{
    var grid = new WebGrid(Model.rating_list, rowsPerPage: 50);
}
<div  align="center" id="gridContent" style=" padding:20px; " >
@grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns:
    grid.Columns(
    grid.Column("Id", format: @<text>  <span  class="display-mode">@item.rating_id </span> <label id="ratingid" class="edit-mode">@item.rating_id</label> </text>, style: "col1Width"),
    grid.Column("rating_name", "Rating Name", format: @<text>  <span  class="display-mode"> <label id="lblratingname"  >@item.rating_name</label> </span> <input type="text" id="txt_ratingName" value="@item.rating_name" class="edit-mode" /></text>, style: "col2Width"),
    grid.Column("rating_shortname", "Short Name", format: @<text> <span  class="display-mode"> <label id="lblratingshortname">@item.rating_shortname</label> </span>  <input type="text" id="txt_rating_shortname" value="@item.rating_shortname" class="edit-mode" /> </text>, style: "col2Width"),
    grid.Column("rating_status", "Status", format: @<text> <span  class="display-mode"> <label id="lblrating_status">@item.rating_status</label> </span>   
    @*<input list="colors"  id="txt_rating_status" class="edit-mode" />
    <datalist id="colors">
  <option value="ACTIVE">
  <option value="INACTIVE">  
</datalist>*@  
    <select class="edit-mode" id="txt_rating_status">
        <option value="ACTIVE">ACTIVE</option>
        <option value="INACTIVE">INACTIVE</option>
    </select>
    </text>, style: "col2Width"),


    grid.Column("rating_isdefault", "Is Default", format: @<text> <span  class="display-mode"> <label id="lblrating_default">@item.rating_isdefault</label> </span>  
    @*<input type="text" id="txt_rating_isdefault" value="@item.rating_isdefault" class="edit-mode" /> *@
    @*<input list="colors1"  id="txt_rating_isdefault" class="edit-mode" />
    <datalist id="colors1">
  <option  value="TRUE">
  <option value="FALSE">  
</datalist>*@ 
    <select class="edit-mode" id="txt_rating_isdefault">
        <option value="TRUE">TRUE</option>
        <option value="FALSE">FALSE</option>
    </select> 
             </text>, style: "col2Width"),
             grid.Column("", format: @<text>
                                <button class="edit-user display-mode" >Update</button>
                                <button class="save-user edit-mode"  >Save</button>
                                <button class="cancel-user edit-mode" >Cancel</button>
                            </text>, style: "col3Width", canSort: false)
           ))

</div>


<div align="center">
@using (Html.BeginForm("ExportData_rating", "Home", FormMethod.Post))
{
    <table>
<tr>
<td>
</td>
<td align="center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<input type="submit" name="export_button" class="button1" value="Export"/>
</td>
</tr>
</table>    
}
</div>






@if (TempData["Success"] != null)
{
 <p>@TempData["Success"]</p>
}




@*grid.Column("Section", format: @item => Html.DropDownList("StudentList[" + (rowNum - 1).ToString() + "].StudentSection",
*@
















@*@{
    var grid = new WebGrid(Model.rating_list, rowsPerPage: 50);
}
<div  align="center" id="gridContent" style=" padding:20px; " >
@grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns:
            grid.Columns(
             grid.Column("rating_id", format: @<text>  <span  class="display-mode">@item.rating_id </span> <label id="ratingid" class="edit-mode">@item.rating_id</label> </text>, style: "col1Width" ),
             grid.Column("rating_name", "Rating Name", format: @<text>  <span  class="display-mode"> <label id="lblratingname"  >@item.rating_name</label> </span> <input type="text" id="txt_ratingName" value="@item.rating_name" class="edit-mode" /></text>, style: "col2Width"),
             grid.Column("rating_shortname", "Short Name", format: @<text> <span  class="display-mode"> <label id="lblratingshortname">@item.rating_shortname</label> </span>  <input type="text" id="txt_rating_shortname" value="@item.rating_shortname" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("rating_status", "Status", format: @<text> <span  class="display-mode"> <label id="lblrating_status">@item.rating_status</label> </span>  <input type="text" id="txt_rating_status" value="@item.rating_status" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("rating_isdefault", "rating_is_default", format: @<text> <span  class="display-mode"> <label id="lblrating_default">@item.rating_isdefault</label> </span>  <input type="text" id="txt_rating_isdefault" value="@item.rating_isdefault" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("", format: @<text>
                                <button class="edit-user display-mode" >Update</button>
                                <button class="save-user edit-mode"  >Save</button>
                                <button class="cancel-user edit-mode" >Cancel</button>
                            </text>, style: "col3Width", canSort: false)
           ))

</div>*@

